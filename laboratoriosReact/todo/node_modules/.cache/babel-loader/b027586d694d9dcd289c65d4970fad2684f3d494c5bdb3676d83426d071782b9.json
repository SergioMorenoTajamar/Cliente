{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alumnos MCSD Tarde\\\\source\\\\repos\\\\Cliente\\\\laboratoriosReact\\\\todo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    // FIN DEL CONSTRUCTOR\n    //funciones \n    this.updateNewTextValue = event => {\n      this.setState({\n        newItemText: event.target.value\n      });\n    };\n    this.createNewTodo = () => {\n      // Si la tarea no Existe en la lista todoitems\n      if (!this.state.todoItems.find(items => items.action === this.state.newItemText)) {\n        this.setState({\n          // A�adimos todos los items que conten�a todoitems + la nueva tarea\n          todoItems: [...this.state.todoItems, {\n            action: this.state.newItemText,\n            done: false\n          }],\n          newItemText: \"\" // Reseteamos el objeto newItemText\n        });\n      }\n    };\n    // Tooglear tareas\n    this.toogleTodo = todo => this.setState({\n      todoItems: this.state.todoItems.map(item => item.action === todo.action ? {\n        ...item,\n        done: !item.done\n      } : item) // Dando la vuelta al done\n    });\n    // Mapear los objetos de la coleccion de tareas en Filas\n    this.todoTableRows = () => this.state.todoItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: item.done,\n          onChange: () => this.toogleTodo(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, item.action, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this));\n    //changeStateData = () => {\n    //    this.setState({ userName: this.state.userName === \"Adam\" ? \"Bob\" : \"Adam\" })\n    //}\n    //render() {\n    //    return (\n    //        <div>\n    //            <h4 className=\"bg-primary text-white text-center p-2\">\n    //                {this.state.userName}'s' to do list</h4>\n    //            <button className=\"btn btn-primary m-2\" onClick={this.changeStateData}>\n    //                change\n    //            </button>\n    //        </div>\n    //    )\n    //}\n    this.render = () =>\n    /*#__PURE__*/\n    // Render con funci�n Flecha \n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"bg-primary text-white text-center p-2\",\n        children: [this.state.userName, \"'s To Do List\", \"(\", this.state.todoItems.filter(t => !t.done).length, \" items to do)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            onChange: this.updateNewTextValue,\n            value: this.state.newItemText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary m-1\",\n            onClick: this.createNewTodo,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.todoTableRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n    this.state = {\n      userName: 'Adam',\n      todoItems: [{\n        action: \"buy Flowers\",\n        done: false\n      }, {\n        action: \"Get Shoes\",\n        done: false\n      }, {\n        action: \"Collect Tickets\",\n        done: true\n      }, {\n        action: \"Call Joe\",\n        done: false\n      }],\n      newItemText: \"\"\n    }; // fin this.state\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","props","updateNewTextValue","event","setState","newItemText","target","value","createNewTodo","state","todoItems","find","items","action","done","toogleTodo","todo","map","item","todoTableRows","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","render","className","userName","filter","t","length","onClick"],"sources":["C:/Users/Alumnos MCSD Tarde/source/repos/Cliente/laboratoriosReact/todo/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userName: 'Adam',\r\n            todoItems: [\r\n                { action: \"buy Flowers\", done: false },\r\n                { action: \"Get Shoes\", done: false },\r\n                { action: \"Collect Tickets\", done: true },\r\n                { action: \"Call Joe\", done: false }\r\n            ],\r\n            newItemText: \"\"\r\n        } // fin this.state\r\n    } // FIN DEL CONSTRUCTOR\r\n\r\n    //funciones \r\n    updateNewTextValue = (event) => {\r\n        this.setState({ newItemText: event.target.value })\r\n    }\r\n    createNewTodo = () => {\r\n        // Si la tarea no Existe en la lista todoitems\r\n        if (!this.state.todoItems.find(items => items.action === this.state.newItemText)) {\r\n            this.setState({// A�adimos todos los items que conten�a todoitems + la nueva tarea\r\n                todoItems: [...this.state.todoItems, { action: this.state.newItemText, done: false }],\r\n                newItemText: \"\" // Reseteamos el objeto newItemText\r\n            })\r\n\r\n        }\r\n    }\r\n    // Tooglear tareas\r\n    toogleTodo = (todo) => this.setState({\r\n        todoItems: this.state.todoItems.map(item => item.action === todo.action ? { ...item, done: !item.done } : item) // Dando la vuelta al done\r\n\r\n    })\r\n\r\n    // Mapear los objetos de la coleccion de tareas en Filas\r\n    todoTableRows = () => this.state.todoItems.map(item =>\r\n        <tr key={item.action }>\r\n            <td>{item.action}</td>\r\n            <td><input type=\"checkbox\" checked={item.done}\r\n                onChange={() => this.toogleTodo(item)} />\r\n            </td>\r\n        </tr>\r\n\r\n    )\r\n\r\n\r\n    //changeStateData = () => {\r\n    //    this.setState({ userName: this.state.userName === \"Adam\" ? \"Bob\" : \"Adam\" })\r\n    //}\r\n\r\n    //render() {\r\n    //    return (\r\n    //        <div>\r\n    //            <h4 className=\"bg-primary text-white text-center p-2\">\r\n    //                {this.state.userName}'s' to do list</h4>\r\n    //            <button className=\"btn btn-primary m-2\" onClick={this.changeStateData}>\r\n    //                change\r\n    //            </button>\r\n    //        </div>\r\n\r\n    //    )\r\n\r\n    //}\r\n\r\n\r\n\r\n    render = () => // Render con funci�n Flecha \r\n        <div>\r\n            <h4 className=\"bg-primary text-white text-center p-2\">\r\n                {this.state.userName}'s To Do List\r\n                {/*Filtramos por la lista de las que no est�n hechas*/}\r\n                ({this.state.todoItems.filter(t => !t.done).length} items to do)\r\n            </h4>\r\n            {/*<button className=\"btn btn-primary m-2\" onClick={this.changeStateData}>*/}\r\n            {/*    Change*/}\r\n            {/*</button>*/}\r\n            <div className=\"container-fluid\">\r\n                <div className=\"my-1\">\r\n                    <input className=\"form-control\" onChange={this.updateNewTextValue} value={this.state.newItemText} />\r\n                    <button className=\"btn btn-primary m-1\"\r\n                        onClick={this.createNewTodo}>Add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <table className=\"table table-striped table-bordered\">\r\n                <thead>\r\n                <tr><th>Description</th><th>Done</th></tr>\r\n                </thead>\r\n                <tbody>{this.todoTableRows()}</tbody>\r\n            </table>\r\n        </div>\r\n\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}