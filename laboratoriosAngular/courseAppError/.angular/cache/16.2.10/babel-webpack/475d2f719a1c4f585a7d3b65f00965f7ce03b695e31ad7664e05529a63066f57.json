{"ast":null,"code":"import { Course } from \"../model/course.model\";\nimport { Message } from \"../messages/message.model\";\nimport { MODES } from \"./sharedState.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../model/repository.model\";\nimport * as i2 from \"./sharedState.service\";\nimport * as i3 from \"../messages/message.service\";\nimport * as i4 from \"@angular/forms\";\nexport class FormComponent {\n  constructor(model, state, messageService) {\n    this.model = model;\n    this.state = state;\n    this.messageService = messageService;\n    this.course = new Course();\n    this.editing = false;\n    this.state.changes.subscribe(upd => this.handleStateChange(upd));\n    this.messageService.reportMessage(new Message(\"Creating New Course\"));\n  }\n  handleStateChange(newState) {\n    this.editing = newState.mode == MODES.EDIT;\n    if (this.editing && newState.id) {\n      Object.assign(this.course, this.model.getCourse(newState.id) ?? new Course());\n      this.messageService.reportMessage(new Message(`Editing ${this.course.title}`));\n    } else {\n      this.course = new Course();\n      this.messageService.reportMessage(new Message(\"Creating New Course\"));\n    }\n  }\n  cancelEdit() {\n    this.state.update(MODES.CREATE);\n  }\n  submitForm(form) {\n    if (form.valid) {\n      this.model.saveCourse(this.course);\n      this.course = new Course();\n      form.resetForm();\n    }\n  }\n  static #_ = this.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.Model), i0.ɵɵdirectiveInject(i2.SharedState), i0.ɵɵdirectiveInject(i3.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"pForm\"]],\n    decls: 23,\n    vars: 8,\n    consts: [[3, \"ngSubmit\", \"reset\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"seatCapacity\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"price\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"instructorName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mt-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", \"m-1\", 3, \"click\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.submitForm(_r0));\n        })(\"reset\", function FormComponent_Template_form_reset_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(_r0.resetForm());\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n        i0.ɵɵtext(4, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.course.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\");\n        i0.ɵɵtext(8, \"Seat Capacity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.course.seatCapacity = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\");\n        i0.ɵɵtext(12, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.course.price = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\");\n        i0.ɵɵtext(16, \"Instructor Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function FormComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.course.instructorName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 7)(19, \"button\", 8);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_21_listener() {\n          return ctx.cancelEdit();\n        });\n        i0.ɵɵtext(22, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.seatCapacity);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.price);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.instructorName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"btn-warning\", ctx.editing);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.editing ? \"Save\" : \"Create\", \" \");\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Course","Message","MODES","FormComponent","constructor","model","state","messageService","course","editing","changes","subscribe","upd","handleStateChange","reportMessage","newState","mode","EDIT","id","Object","assign","getCourse","title","cancelEdit","update","CREATE","submitForm","form","valid","saveCourse","resetForm","_","i0","ɵɵdirectiveInject","i1","Model","i2","SharedState","i3","MessageService","_2","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","FormComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","FormComponent_Template_form_reset_0_listener","ɵɵtext","ɵɵelementEnd","FormComponent_Template_input_ngModelChange_5_listener","$event","FormComponent_Template_input_ngModelChange_9_listener","seatCapacity","FormComponent_Template_input_ngModelChange_13_listener","price","FormComponent_Template_input_ngModelChange_17_listener","instructorName","FormComponent_Template_button_click_21_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","invalid","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Alumnos MCSD Tarde\\source\\repos\\Cliente\\laboratoriosAngular\\courseApp\\src\\app\\core\\form.component.ts","C:\\Users\\Alumnos MCSD Tarde\\source\\repos\\Cliente\\laboratoriosAngular\\courseApp\\src\\app\\core\\form.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Course } from \"../model/course.model\";\r\nimport { Model } from \"../model/repository.model\"\r\nimport { Message } from \"../messages/message.model\"\r\nimport { MessageService } from \"../messages/message.service\";\r\nimport { MODES, SharedState, StateUpdate } from \"./sharedState.service\";\r\n\r\n@Component({\r\n  selector: \"pForm\",\r\n  templateUrl: \"form.component.html\"\r\n})\r\n\r\nexport class FormComponent {\r\n\r\n  course: Course = new Course();\r\n  editing: boolean = false;\r\n\r\n  constructor(private model: Model, private state: SharedState,\r\n    private messageService: MessageService) {\r\n\r\n    this.state.changes.subscribe((upd) => this.handleStateChange(upd))\r\n    this.messageService.reportMessage(new Message(\"Creating New Course\"));\r\n  }\r\n\r\n  handleStateChange(newState: StateUpdate) { \r\n\r\n    this.editing = newState.mode == MODES.EDIT;\r\n\r\n    if (this.editing && newState.id) {\r\n      Object.assign(this.course, this.model.getCourse(newState.id)\r\n        ?? new Course());\r\n      this.messageService.reportMessage(\r\n        new Message(`Editing ${this.course.title}`));\r\n    } else {\r\n      this.course = new Course();\r\n      this.messageService.reportMessage(new Message(\"Creating New Course\"));\r\n    }\r\n  }\r\n  cancelEdit() {\r\n    this.state.update(MODES.CREATE);\r\n  }\r\n  submitForm(form: NgForm) {\r\n\r\n    if (form.valid) {\r\n      this.model.saveCourse(this.course);\r\n      this.course = new Course();\r\n      form.resetForm();\r\n    }\r\n  }\r\n}\r\n","<form #form=\"ngForm\" (ngSubmit)=\"submitForm(form)\" (reset)=\"form.resetForm()\">\r\n\r\n  <div class=\"form-group\">\r\n    <label>Title</label>\r\n    <input class=\"form-control\" name=\"title\"\r\n           [(ngModel)]=\"course.title\" required />\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label>Seat Capacity</label>\r\n    <input class=\"form-control\" name=\"seatCapacity\"\r\n           [(ngModel)]=\"course.seatCapacity\" required/>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Price</label>\r\n    <input class=\"form-control\" name=\"price\"\r\n           [(ngModel)]=\"course.price\" required/>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Instructor Name</label>\r\n    <input class=\"form-control\" name=\"instructorName\"\r\n           [(ngModel)]=\"course.instructorName\"\r\n           required />\r\n  </div>\r\n\r\n  <div class=\"mt-2\">\r\n    <button type=\"submit\" class=\"btn btn-primary\"\r\n            [class.btn-warning]=\"editing\" [disabled]=\"form.invalid\">\r\n      {{editing ? \"Save\" : \"Create\"}}\r\n    </button>\r\n    <button type=\"reset\" class=\"btn btn-secondary m-1\" (click)=\"cancelEdit()\">Cancel</button>\r\n  </div>\r\n</form>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}