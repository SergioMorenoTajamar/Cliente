{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Course } from \"../model/course.model\";\nimport { Message } from \"../messages/message.model\";\nimport { MODES } from \"./sharedState.service\";\nexport let FormComponent = class FormComponent {\n  constructor(model, state, messageService) {\n    this.model = model;\n    this.state = state;\n    this.messageService = messageService;\n    this.course = new Course();\n    this.editing = false;\n    this.state.changes.subscribe(upd => this.handleStateChange(upd));\n    this.messageService.reportMessage(new Message(\"Creating New Course\"));\n  }\n  handleStateChange(newState) {\n    // Manejar cambios en el estado [CREATE,EDIT]\n    this.editing = newState.mode == MODES.EDIT;\n    if (this.editing && newState.id) {\n      Object.assign(this.course, this.model.getCourse(newState.id) ?? new Course());\n      this.messageService.reportMessage(new Message(`Editing ${this.course.title}`));\n    } else {\n      this.course = new Course();\n      this.messageService.reportMessage(new Message(\"Creating New Course\"));\n    }\n  }\n  submitForm(form) {\n    if (form.valid) {\n      this.model.saveCourse(this.course);\n      this.course = new Course();\n      form.resetForm();\n    }\n  }\n};\nFormComponent = __decorate([Component({\n  selector: \"PForm\",\n  templateUrl: \"form.component.html\",\n  styleUrls: [\"form.component.css\"]\n})], FormComponent);","map":{"version":3,"names":["Component","Course","Message","MODES","FormComponent","constructor","model","state","messageService","course","editing","changes","subscribe","upd","handleStateChange","reportMessage","newState","mode","EDIT","id","Object","assign","getCourse","title","submitForm","form","valid","saveCourse","resetForm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Alumnos MCSD Tarde\\source\\repos\\Cliente\\laboratoriosAngular\\courseApp\\src\\app\\core\\form.component.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Course } from \"../model/course.model\";\r\nimport { Model } from \"../model/repository.model\"\r\nimport { Message } from \"../messages/message.model\"\r\nimport { MessageService } from \"../messages/message.service\";\r\nimport { MODES, SharedState, StateUpdate } from \"./sharedState.service\";\r\n\r\n@Component({\r\n  selector: \"PForm\",\r\n  templateUrl: \"form.component.html\",\r\n  styleUrls: [\"form.component.css\"]\r\n})\r\n\r\nexport class FormComponent {\r\n\r\n  course: Course = new Course();\r\n  editing: boolean = false;\r\n\r\n  constructor(private model: Model, private state: SharedState,\r\n    private messageService: MessageService) {\r\n\r\n    this.state.changes.subscribe((upd) => this.handleStateChange(upd))\r\n    this.messageService.reportMessage(new Message(\"Creating New Course\"));\r\n  }\r\n\r\n  handleStateChange(newState: StateUpdate) { \r\n    // Manejar cambios en el estado [CREATE,EDIT]\r\n\r\n    this.editing = newState.mode == MODES.EDIT;\r\n\r\n    if (this.editing && newState.id) {\r\n      Object.assign(this.course, this.model.getCourse(newState.id)\r\n        ?? new Course());\r\n      this.messageService.reportMessage(\r\n        new Message(`Editing ${this.course.title}`));\r\n    } else {\r\n      this.course = new Course();\r\n      this.messageService.reportMessage(new Message(\"Creating New Course\"));\r\n    }\r\n  }\r\n  submitForm(form: NgForm) {\r\n\r\n    if (form.valid) {\r\n      this.model.saveCourse(this.course);\r\n      this.course = new Course();\r\n      form.resetForm();\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,SAASC,OAAO,QAAQ,2BAA2B;AAEnD,SAASC,KAAK,QAAkC,uBAAuB;AAQhE,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAoBC,KAAY,EAAUC,KAAkB,EAClDC,cAA8B;IADpB,KAAAF,KAAK,GAALA,KAAK;IAAiB,KAAAC,KAAK,GAALA,KAAK;IACrC,KAAAC,cAAc,GAAdA,cAAc;IAJxB,KAAAC,MAAM,GAAW,IAAIR,MAAM,EAAE;IAC7B,KAAAS,OAAO,GAAY,KAAK;IAKtB,IAAI,CAACH,KAAK,CAACI,OAAO,CAACC,SAAS,CAAEC,GAAG,IAAK,IAAI,CAACC,iBAAiB,CAACD,GAAG,CAAC,CAAC;IAClE,IAAI,CAACL,cAAc,CAACO,aAAa,CAAC,IAAIb,OAAO,CAAC,qBAAqB,CAAC,CAAC;EACvE;EAEAY,iBAAiBA,CAACE,QAAqB;IACrC;IAEA,IAAI,CAACN,OAAO,GAAGM,QAAQ,CAACC,IAAI,IAAId,KAAK,CAACe,IAAI;IAE1C,IAAI,IAAI,CAACR,OAAO,IAAIM,QAAQ,CAACG,EAAE,EAAE;MAC/BC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACZ,MAAM,EAAE,IAAI,CAACH,KAAK,CAACgB,SAAS,CAACN,QAAQ,CAACG,EAAE,CAAC,IACvD,IAAIlB,MAAM,EAAE,CAAC;MAClB,IAAI,CAACO,cAAc,CAACO,aAAa,CAC/B,IAAIb,OAAO,CAAC,WAAW,IAAI,CAACO,MAAM,CAACc,KAAK,EAAE,CAAC,CAAC;KAC/C,MAAM;MACL,IAAI,CAACd,MAAM,GAAG,IAAIR,MAAM,EAAE;MAC1B,IAAI,CAACO,cAAc,CAACO,aAAa,CAAC,IAAIb,OAAO,CAAC,qBAAqB,CAAC,CAAC;;EAEzE;EACAsB,UAAUA,CAACC,IAAY;IAErB,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,IAAI,CAACpB,KAAK,CAACqB,UAAU,CAAC,IAAI,CAAClB,MAAM,CAAC;MAClC,IAAI,CAACA,MAAM,GAAG,IAAIR,MAAM,EAAE;MAC1BwB,IAAI,CAACG,SAAS,EAAE;;EAEpB;CACD;AAnCYxB,aAAa,GAAAyB,UAAA,EANzB7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,qBAAqB;EAClCC,SAAS,EAAE,CAAC,oBAAoB;CACjC,CAAC,C,EAEW5B,aAAa,CAmCzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}